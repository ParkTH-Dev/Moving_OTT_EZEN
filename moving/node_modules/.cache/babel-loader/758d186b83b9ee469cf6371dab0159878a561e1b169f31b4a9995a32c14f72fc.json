{"ast":null,"code":"var _jsxFileName = \"/Users/yerixxz/Documents/code/3nd_project_moving/src/pages/Signup.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport LogoSVG from \"../components/Logo/LogoSVG\";\nimport { Wrapper, Logo, Form, Title, Text, InputWrapper, InputContainer, Input, Label, Desc, Submit, VerificationWrapper, PhoneNumberInput, PhoneButton } from \"../styles/loginSignup.styled\";\nimport { useEffect, useState } from \"react\";\nimport initialFocusStates from \"./util/initialFocusStates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(\"\");\n  const [isPhoneValid, setIsPhoneValid] = useState(false);\n  const [showVerification, setShowVerification] = useState(false);\n  const [generatedCode, setGeneratedCode] = useState(null);\n  const {\n    goToMain\n  } = useOutletContext();\n  const [focusStates, setFocusStates] = useState(initialFocusStates);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues\n  } = useForm();\n  const handleFocus = field => {\n    setFocusStates(prev => ({\n      ...prev,\n      [field]: true\n    }));\n  };\n  const handleBlur = (field, value) => {\n    setFocusStates(prev => ({\n      ...prev,\n      [field]: value !== \"\"\n    }));\n    if (field === \"id\") {\n      setUserId(value);\n    }\n    if (field === \"phoneNum\") {\n      // 휴대폰 번호 유효성 검사\n      const phonePattern = /^01[016789]\\d{3,4}\\d{4}$/;\n      setIsPhoneValid(phonePattern.test(value));\n    }\n  };\n  const sendVerificationCode = () => {\n    const code = Math.floor(100000 + Math.random() * 900000).toString();\n    setGeneratedCode(code);\n    setShowVerification(true);\n    alert(`인증번호가 발송되었습니다: ${code}`); // 실제로는 서버로 발송\n  };\n\n  // phoneNum의 유효성을 관리하는 useEffect\n  useEffect(() => {\n    const phoneNum = getValues(\"phoneNum\");\n    const phonePattern = /^01[016789]\\d{3,4}\\d{4}$/;\n    setIsPhoneValid(phonePattern.test(phoneNum));\n  }, [getValues(\"phoneNum\")]);\n  const onSubmit = data => {\n    if (data.verificationCode !== generatedCode) {\n      alert(\"인증번호가 올바르지 않습니다.\");\n      return;\n    }\n    alert(`축하합니다 ${userId}님! 회원 가입이 성공적으로 완료되었습니다`);\n    navigate(\"/\");\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        onClick: goToMain,\n        children: /*#__PURE__*/_jsxDEV(LogoSVG, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"MOVING \\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"\\uC544\\uC774\\uB514\\uC640 \\uC774\\uBA54\\uC77C\\uB85C \\uAC04\\uD3B8\\uD558\\uAC8C \\uBB34\\uBE59\\uC744 \\uC2DC\\uC791\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"id\", {\n                required: \"아이디를 입력해주세요.\",\n                minLength: {\n                  value: 4,\n                  message: \"아이디는 최소 4자 이상 입력해주세요\"\n                }\n              }),\n              id: \"id\",\n              type: \"text\",\n              onFocus: () => handleFocus(\"id\"),\n              onBlur: e => handleBlur(\"id\", e.target.value),\n              hasError: !!errors.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"id\",\n              className: focusStates.id ? \"focused\" : \"\",\n              hasError: !!errors.id,\n              children: errors.id ? errors.id.message : \"아이디\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Desc, {\n            children: \"\\uC601\\uBB38 \\uC18C\\uBB38\\uC790 \\uB610\\uB294 \\uC601\\uBB38 \\uC18C\\uBB38\\uC790, \\uC22B\\uC790 \\uC870\\uD569 6~12\\uC790\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"password\", {\n                required: \"비밀번호를 입력해주세요.\",\n                minLength: {\n                  value: 8,\n                  message: \"비밀번호는 8자 이상 입력해주세요\"\n                },\n                validate: value => value === getValues(\"passwordChack\") || \"비밀번호가 일치하지 않습니다.\"\n              }),\n              id: \"password\",\n              type: \"password\",\n              onFocus: () => handleFocus(\"password\"),\n              onBlur: e => handleBlur(\"password\", e.target.value),\n              hasError: !!errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"password\",\n              className: focusStates.password ? \"focused\" : \"\",\n              hasError: !!errors.password,\n              children: errors.password ? errors.password.message : \"비밀번호\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"passwordChack\", {\n                required: \"비밀번호를 확인해주세요.\",\n                minLength: {\n                  value: 8,\n                  message: \"비밀번호는 최소 8자 이상 입력해주세요\"\n                }\n              }),\n              type: \"password\",\n              onFocus: () => handleFocus(\"passwordChack\"),\n              onBlur: e => handleBlur(\"passwordChack\", e.target.value),\n              hasError: !!errors.passwordChack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"passwordChack\",\n              className: focusStates.passwordChack ? \"focused\" : \"\",\n              hasError: !!errors.passwordChack,\n              children: errors.password ? errors.password.message : \"비밀번호 확인\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Desc, {\n            children: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uC870\\uD569 8~15 \\uC790\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"email\", {\n                required: \"이메일을 입력해주세요.\",\n                pattern: {\n                  value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                  message: \"이메일 형식을 맞춰주세요.\"\n                }\n              }),\n              type: \"email\",\n              onFocus: () => handleFocus(\"email\"),\n              onBlur: e => handleBlur(\"email\", e.target.value),\n              hasError: !!errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email\",\n              className: focusStates.email ? \"focused\" : \"\",\n              hasError: !!errors.email,\n              children: errors.email ? errors.email.message : \"이메일\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VerificationWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n              children: [/*#__PURE__*/_jsxDEV(PhoneNumberInput, {\n                ...register(\"phoneNum\", {\n                  required: \"휴대폰 번호를 입력해주세요.\",\n                  pattern: {\n                    value: /^01[016789]\\d{3,4}\\d{4}$/,\n                    message: \"휴대폰 번호 형식이 올바르지 않습니다.\"\n                  }\n                }),\n                id: \"phoneNum\",\n                type: \"text\",\n                onFocus: () => handleFocus(\"phoneNum\"),\n                onBlur: e => handleBlur(\"phoneNum\", e.target.value),\n                hasError: !!errors.phoneNum\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"phoneNum\",\n                className: focusStates.phoneNum ? \"focused\" : \"\",\n                hasError: !!errors.phoneNum,\n                children: errors.phoneNum ? errors.phoneNum.message : \"휴대폰 번호\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PhoneButton, {\n              id: \"phoneBtn\",\n              type: \"button\",\n              value: \"\\uC778\\uC99D\\uBC88\\uD638 \\uC804\\uC1A1\",\n              onClick: sendVerificationCode,\n              disabled: !isPhoneValid // 유효할 때만 버튼 활성화\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), showVerification && /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"verificationCode\", {\n                required: \"인증번호를 입력해주세요.\",\n                minLength: {\n                  value: 6,\n                  message: \"인증번호는 6자리입니다.\"\n                }\n              }),\n              id: \"verificationCode\",\n              type: \"text\",\n              onFocus: () => handleFocus(\"verificationCode\"),\n              onBlur: e => handleBlur(\"verificationCode\", e.target.value),\n              hasError: !!errors.verificationCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"verificationCode\",\n              className: focusStates.verificationCode ? \"focused\" : \"\",\n              hasError: !!errors.verificationCode,\n              children: errors.verificationCode ? errors.verificationCode.message : \"인증번호\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          type: \"submit\",\n          value: \"회원가입하기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(Signup, \"BJeckECligf5250e7Qf922Oc0+A=\", false, function () {\n  return [useNavigate, useOutletContext, useForm];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useNavigate","useOutletContext","useForm","LogoSVG","Wrapper","Logo","Form","Title","Text","InputWrapper","InputContainer","Input","Label","Desc","Submit","VerificationWrapper","PhoneNumberInput","PhoneButton","useEffect","useState","initialFocusStates","jsxDEV","_jsxDEV","Signup","_s","navigate","userId","setUserId","isPhoneValid","setIsPhoneValid","showVerification","setShowVerification","generatedCode","setGeneratedCode","goToMain","focusStates","setFocusStates","register","handleSubmit","formState","errors","getValues","handleFocus","field","prev","handleBlur","value","phonePattern","test","sendVerificationCode","code","Math","floor","random","toString","alert","phoneNum","onSubmit","data","verificationCode","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","required","minLength","message","id","type","onFocus","onBlur","e","target","hasError","htmlFor","className","validate","password","passwordChack","pattern","email","disabled","_c","$RefreshReg$"],"sources":["/Users/yerixxz/Documents/code/3nd_project_moving/src/pages/Signup.tsx"],"sourcesContent":["import { useNavigate, useOutletContext } from \"react-router-dom\";\nimport { GoToProps } from \"../Root\";\nimport { useForm } from \"react-hook-form\";\nimport LogoSVG from \"../components/Logo/LogoSVG\";\nimport {\n  Wrapper,\n  Logo,\n  Form,\n  Title,\n  Text,\n  InputWrapper,\n  InputContainer,\n  Input,\n  Label,\n  Desc,\n  Submit,\n  VerificationWrapper,\n  PhoneNumberInput,\n  PhoneButton,\n} from \"../styles/loginSignup.styled\";\nimport { useEffect, useState } from \"react\";\nimport initialFocusStates from \"./util/initialFocusStates\";\n\ninterface FormData {\n  id: string;\n  password: string;\n  passwordChack: string;\n  email: string;\n  phoneNum: string;\n  verificationCode: string;\n}\n\nconst Signup = () => {\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(\"\");\n  const [isPhoneValid, setIsPhoneValid] = useState(false);\n  const [showVerification, setShowVerification] = useState(false);\n  const [generatedCode, setGeneratedCode] = useState<string | null>(null);\n  const { goToMain } = useOutletContext<GoToProps>();\n\n  const [focusStates, setFocusStates] = useState(initialFocusStates);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n  } = useForm<FormData>();\n\n  const handleFocus = (field: keyof FormData) => {\n    setFocusStates((prev) => ({ ...prev, [field]: true }));\n  };\n\n  const handleBlur = (field: keyof FormData, value: string) => {\n    setFocusStates((prev) => ({ ...prev, [field]: value !== \"\" }));\n    if (field === \"id\") {\n      setUserId(value);\n    }\n    if (field === \"phoneNum\") {\n      // 휴대폰 번호 유효성 검사\n      const phonePattern = /^01[016789]\\d{3,4}\\d{4}$/;\n      setIsPhoneValid(phonePattern.test(value));\n    }\n  };\n\n  const sendVerificationCode = () => {\n    const code = Math.floor(100000 + Math.random() * 900000).toString();\n    setGeneratedCode(code);\n    setShowVerification(true);\n    alert(`인증번호가 발송되었습니다: ${code}`); // 실제로는 서버로 발송\n  };\n\n  // phoneNum의 유효성을 관리하는 useEffect\n  useEffect(() => {\n    const phoneNum = getValues(\"phoneNum\");\n    const phonePattern = /^01[016789]\\d{3,4}\\d{4}$/;\n    setIsPhoneValid(phonePattern.test(phoneNum));\n  }, [getValues(\"phoneNum\")]);\n\n  const onSubmit = (data: FormData) => {\n    if (data.verificationCode !== generatedCode) {\n      alert(\"인증번호가 올바르지 않습니다.\");\n      return;\n    }\n    alert(`축하합니다 ${userId}님! 회원 가입이 성공적으로 완료되었습니다`);\n    navigate(\"/\");\n\n    return (\n      <Wrapper>\n        <Logo onClick={goToMain}>\n          <LogoSVG />\n        </Logo>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Title>MOVING 회원가입</Title>\n          <Text>아이디와 이메일로 간편하게 무빙을 시작하세요</Text>\n          <InputWrapper>\n            {/* 아이디 */}\n            <InputContainer>\n              <Input\n                {...register(\"id\", {\n                  required: \"아이디를 입력해주세요.\",\n                  minLength: {\n                    value: 4,\n                    message: \"아이디는 최소 4자 이상 입력해주세요\",\n                  },\n                })}\n                id=\"id\"\n                type=\"text\"\n                onFocus={() => handleFocus(\"id\")}\n                onBlur={(e) => handleBlur(\"id\", e.target.value)}\n                hasError={!!errors.id}\n              />\n              <Label\n                htmlFor=\"id\"\n                className={focusStates.id ? \"focused\" : \"\"}\n                hasError={!!errors.id}\n              >\n                {errors.id ? errors.id.message : \"아이디\"}\n              </Label>\n            </InputContainer>\n            <Desc>영문 소문자 또는 영문 소문자, 숫자 조합 6~12자리</Desc>\n\n            {/* 비밀번호 */}\n            <InputContainer>\n              <Input\n                {...register(\"password\", {\n                  required: \"비밀번호를 입력해주세요.\",\n                  minLength: {\n                    value: 8,\n                    message: \"비밀번호는 8자 이상 입력해주세요\",\n                  },\n                  validate: (value) =>\n                    value === getValues(\"passwordChack\") ||\n                    \"비밀번호가 일치하지 않습니다.\",\n                })}\n                id=\"password\"\n                type=\"password\"\n                onFocus={() => handleFocus(\"password\")}\n                onBlur={(e) => handleBlur(\"password\", e.target.value)}\n                hasError={!!errors.password}\n              />\n              <Label\n                htmlFor=\"password\"\n                className={focusStates.password ? \"focused\" : \"\"}\n                hasError={!!errors.password}\n              >\n                {errors.password ? errors.password.message : \"비밀번호\"}\n              </Label>\n            </InputContainer>\n\n            {/* 비밀번호 확인 */}\n            <InputContainer>\n              <Input\n                {...register(\"passwordChack\", {\n                  required: \"비밀번호를 확인해주세요.\",\n                  minLength: {\n                    value: 8,\n                    message: \"비밀번호는 최소 8자 이상 입력해주세요\",\n                  },\n                })}\n                type=\"password\"\n                onFocus={() => handleFocus(\"passwordChack\")}\n                onBlur={(e) => handleBlur(\"passwordChack\", e.target.value)}\n                hasError={!!errors.passwordChack}\n              />\n              <Label\n                htmlFor=\"passwordChack\"\n                className={focusStates.passwordChack ? \"focused\" : \"\"}\n                hasError={!!errors.passwordChack}\n              >\n                {errors.password ? errors.password.message : \"비밀번호 확인\"}\n              </Label>\n            </InputContainer>\n            <Desc>영문, 숫자, 특수문자 조합 8~15 자리</Desc>\n\n            {/* 이메일 */}\n            <InputContainer>\n              <Input\n                {...register(\"email\", {\n                  required: \"이메일을 입력해주세요.\",\n                  pattern: {\n                    value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                    message: \"이메일 형식을 맞춰주세요.\",\n                  },\n                })}\n                type=\"email\"\n                onFocus={() => handleFocus(\"email\")}\n                onBlur={(e) => handleBlur(\"email\", e.target.value)}\n                hasError={!!errors.email}\n              />\n              <Label\n                htmlFor=\"email\"\n                className={focusStates.email ? \"focused\" : \"\"}\n                hasError={!!errors.email}\n              >\n                {errors.email ? errors.email.message : \"이메일\"}\n              </Label>\n            </InputContainer>\n\n            {/* 휴대폰 번호 및 인증 */}\n            <VerificationWrapper>\n              <InputContainer>\n                <PhoneNumberInput\n                  {...register(\"phoneNum\", {\n                    required: \"휴대폰 번호를 입력해주세요.\",\n                    pattern: {\n                      value: /^01[016789]\\d{3,4}\\d{4}$/,\n                      message: \"휴대폰 번호 형식이 올바르지 않습니다.\",\n                    },\n                  })}\n                  id=\"phoneNum\"\n                  type=\"text\"\n                  onFocus={() => handleFocus(\"phoneNum\")}\n                  onBlur={(e) => handleBlur(\"phoneNum\", e.target.value)}\n                  hasError={!!errors.phoneNum}\n                />\n                <Label\n                  htmlFor=\"phoneNum\"\n                  className={focusStates.phoneNum ? \"focused\" : \"\"}\n                  hasError={!!errors.phoneNum}\n                >\n                  {errors.phoneNum ? errors.phoneNum.message : \"휴대폰 번호\"}\n                </Label>\n              </InputContainer>\n              <PhoneButton\n                id=\"phoneBtn\"\n                type=\"button\"\n                value=\"인증번호 전송\"\n                onClick={sendVerificationCode}\n                disabled={!isPhoneValid} // 유효할 때만 버튼 활성화\n              />\n            </VerificationWrapper>\n\n            {/* 인증번호 입력 */}\n            {showVerification && (\n              <InputContainer>\n                <Input\n                  {...register(\"verificationCode\", {\n                    required: \"인증번호를 입력해주세요.\",\n                    minLength: { value: 6, message: \"인증번호는 6자리입니다.\" },\n                  })}\n                  id=\"verificationCode\"\n                  type=\"text\"\n                  onFocus={() => handleFocus(\"verificationCode\")}\n                  onBlur={(e) => handleBlur(\"verificationCode\", e.target.value)}\n                  hasError={!!errors.verificationCode}\n                />\n                <Label\n                  htmlFor=\"verificationCode\"\n                  className={focusStates.verificationCode ? \"focused\" : \"\"}\n                  hasError={!!errors.verificationCode}\n                >\n                  {errors.verificationCode\n                    ? errors.verificationCode.message\n                    : \"인증번호\"}\n                </Label>\n              </InputContainer>\n            )}\n          </InputWrapper>\n          <Submit type=\"submit\" value={\"회원가입하기\"} />\n        </Form>\n      </Wrapper>\n    );\n  };\n};\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}